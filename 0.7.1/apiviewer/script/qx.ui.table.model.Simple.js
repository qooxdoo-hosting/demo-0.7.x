{type:"class",attributes:{"name":"Simple","hasWarning":"true","packageName":"qx.ui.table.model","superClass":"qx.ui.table.model.Abstract","childClasses":"qx.ui.treevirtual.SimpleTreeDataModel","fullName":"qx.ui.table.model.Simple","type":"class"},children:[{type:"desc",attributes:{"text":"<p>A simple table model that provides an <span class=\"caps\">API</span> for changing the model data.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"isCtor":"true","name":"ctor"}}]},{type:"methods-static",children:[{type:"method",attributes:{"access":"protected","hasError":"true","isStatic":"true","name":"_defaultSortComparatorAscending"},children:[{type:"params",children:[{type:"param",attributes:{"name":"row1"}},{type:"param",attributes:{"name":"row2"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"7","line":"53"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","isStatic":"true","name":"_defaultSortComparatorDescending"},children:[{type:"params",children:[{type:"param",attributes:{"name":"row1"}},{type:"param",attributes:{"name":"row2"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"7","line":"61"}}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","name":"_clearSorting"},children:[{type:"desc",attributes:{"text":"<p>Clears the sorting.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"access":"protected","name":"_mapArray2RowArr"},children:[{type:"params",children:[{type:"param",attributes:{"name":"mapArr"},children:[{type:"desc",attributes:{"text":"<p>An array containing a map for each row. Each\n         row-map contains the column IDs as key and the cell values as value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map","dimensions":"1"}}]}]},{type:"param",attributes:{"defaultValue":"false","name":"rememberMaps"},children:[{type:"desc",attributes:{"text":"<p>Whether to remember the original maps.\n       If true {@link #getRowData} will return the original map.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Creates an array of maps to an array of arrays.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>An array containing an array for each row. Each\n          row-array contains the values in that row in the order of the columns\n          in this model.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var","dimensions":"2"}}]}]}]},{type:"method",attributes:{"name":"addRows"},children:[{type:"params",children:[{type:"param",attributes:{"name":"rowArr"},children:[{type:"desc",attributes:{"text":"<p>An array containing an array for each row. Each\n         row-array contains the values in that row in the order of the columns\n         in this model.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var","dimensions":"2"}}]}]},{type:"param",attributes:{"defaultValue":"null","name":"startIndex"},children:[{type:"desc",attributes:{"text":"<p>The index where to insert the new rows. If null,\n         the rows are appended to the end.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Adds some rows to the model.</p>\n\n<p>Warning: The given array will be altered!</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"addRowsAsMapArray"},children:[{type:"params",children:[{type:"param",attributes:{"name":"mapArr"},children:[{type:"desc",attributes:{"text":"<p>An array containing a map for each row. Each\n       row-map contains the column IDs as key and the cell values as value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map","dimensions":"1"}}]}]},{type:"param",attributes:{"defaultValue":"null","name":"startIndex"},children:[{type:"desc",attributes:{"text":"<p>The index where to insert the new rows. If null,\n       the rows are appended to the end.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"defaultValue":"false","name":"rememberMaps"},children:[{type:"desc",attributes:{"text":"<p>Whether to remember the original maps.\n       If true {@link #getRowData} will return the original map.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Adds some rows to the model.</p>\n\n<p>Warning: The given array (mapArr) will be altered!</p>"}}]},{type:"method",attributes:{"name":"getData"},children:[{type:"desc",attributes:{"text":"<p>Returns the data of this model.</p>\n\n<p>Warning: Do not alter this array! If you want to change the data use\n{@link #setData}, {@link #setDataAsMapArray} or {@link #setValue} instead.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>An array containing an array for each row. Each\n          row-array contains the values in that row in the order of the columns\n          in this model.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var","dimensions":"2"}}]}]}]},{type:"method",attributes:{"hasError":"true","overriddenFrom":"qx.ui.table.model.Basic","name":"getRowCount"},children:[{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"19","line":"308"}}]}]},{type:"method",attributes:{"overriddenFrom":"qx.ui.table.model.Basic","name":"getRowData"},children:[{type:"params",children:[{type:"param",attributes:{"name":"rowIndex"},children:[{type:"desc",attributes:{"text":"<p>the model index of the row.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>See overridden method for details.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Array containing a value for each column.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Array"}}]}]}]},{type:"method",attributes:{"name":"getRowDataAsMap"},children:[{type:"params",children:[{type:"param",attributes:{"name":"rowIndex"},children:[{type:"desc",attributes:{"text":"<p>the model index of the row.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Returns the data of one row as map containing the column IDs as key and\nthe cell values as value.</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>a Map containing the column values.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"method",attributes:{"hasError":"true","overriddenFrom":"qx.ui.table.model.Basic","name":"getSortColumnIndex"},children:[{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"26","line":"286"}}]}]},{type:"method",attributes:{"hasError":"true","overriddenFrom":"qx.ui.table.model.Basic","name":"getValue"},children:[{type:"params",children:[{type:"param",attributes:{"name":"columnIndex"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"rowIndex"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>columnIndex</code> is not documented.","column":"16","line":"322"}},{type:"error",attributes:{"msg":"Parameter <code>rowIndex</code> is not documented.","column":"16","line":"322"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"16","line":"322"}}]}]},{type:"method",attributes:{"hasError":"true","overriddenFrom":"qx.ui.table.model.Basic","name":"isColumnEditable"},children:[{type:"params",children:[{type:"param",attributes:{"name":"columnIndex"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>columnIndex</code> is not documented.","column":"24","line":"160"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"24","line":"160"}}]}]},{type:"method",attributes:{"docFrom":"qx.ui.table.model.Basic","overriddenFrom":"qx.ui.table.model.Basic","name":"isColumnSortable"},children:[{type:"params",children:[{type:"param",attributes:{"name":"columnIndex"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]}]},{type:"method",attributes:{"hasError":"true","overriddenFrom":"qx.ui.table.model.Basic","name":"isSortAscending"},children:[{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"boolean"}}]}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"23","line":"297"}}]}]},{type:"method",attributes:{"name":"removeRows"},children:[{type:"params",children:[{type:"param",attributes:{"name":"startIndex"},children:[{type:"desc",attributes:{"text":"<p>the index of the first row to remove.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"howMany"},children:[{type:"desc",attributes:{"text":"<p>the number of rows to remove.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]}]},{type:"desc",attributes:{"text":"<p>Removes some rows from the model.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setColumnEditable"},children:[{type:"params",children:[{type:"param",attributes:{"name":"columnIndex"},children:[{type:"desc",attributes:{"text":"<p>the column of which to set the editable state.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"editable"},children:[{type:"desc",attributes:{"text":"<p>whether the column should be editable.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets whether a column is editable.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setColumnSortable"},children:[{type:"params",children:[{type:"param",attributes:{"name":"columnIndex"},children:[{type:"desc",attributes:{"text":"<p>the column of which to set the sortable state.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"sortable"},children:[{type:"desc",attributes:{"text":"<p>whether the column should be sortable.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets whether a column is sortable.</p>"}}]},{type:"method",attributes:{"name":"setData"},children:[{type:"params",children:[{type:"param",attributes:{"name":"rowArr"},children:[{type:"desc",attributes:{"text":"<p>An array containing an array for each row. Each\n         row-array contains the values in that row in the order of the columns\n         in this model.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"var","dimensions":"2"}}]}]},{type:"param",attributes:{"defaultValue":"true","name":"clearSorting"},children:[{type:"desc",attributes:{"text":"<p>Whether to clear the sort state.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the whole data in a bulk.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setDataAsMapArray"},children:[{type:"params",children:[{type:"param",attributes:{"name":"mapArr"},children:[{type:"desc",attributes:{"text":"<p>An array containing a map for each row. Each\n       row-map contains the column IDs as key and the cell values as value.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map","dimensions":"1"}}]}]},{type:"param",attributes:{"defaultValue":"false","name":"rememberMaps"},children:[{type:"desc",attributes:{"text":"<p>Whether to remember the original maps.\n       If true {@link #getRowData} will return the original map.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]},{type:"param",attributes:{"defaultValue":"true","name":"clearSorting"},children:[{type:"desc",attributes:{"text":"<p>Whether to clear the sort state.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets the whole data in a bulk.</p>"}}]},{type:"method",attributes:{"name":"setEditable"},children:[{type:"params",children:[{type:"param",attributes:{"name":"editable"},children:[{type:"desc",attributes:{"text":"<p>whether all columns are editable.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Boolean"}}]}]}]},{type:"desc",attributes:{"text":"<p>Sets all columns editable or not editable.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"setSortMethods"},children:[{type:"params",children:[{type:"param",attributes:{"name":"columnIndex"},children:[{type:"desc",attributes:{"text":"<p>The index of the column or which the sort methods are being\n  provided.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"methods"},children:[{type:"desc",attributes:{"text":"<p>Map with two properties: &#8220;ascending&#8221; and &#8220;descending&#8221;.  The\n  property value of each is a comparator function which takes two\n  parameters: the two arrays of row data, row1 and row2, being\n  compared.  It may determine which column to of the row data to sort\n  on by accessing arguments.callee.columnIndex.  Each comparator\n  function must return 1, 0 or -1, when the column in row1 is greater\n  than, equal to, or less than, respectively, the column in row2.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Map"}}]}]}]},{type:"desc",attributes:{"text":"<p>Specify the methods to use for ascending and descending sorts of a\nparticular column.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"hasError":"true","overriddenFrom":"qx.ui.table.model.Basic","name":"setValue"},children:[{type:"params",children:[{type:"param",attributes:{"name":"columnIndex"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"rowIndex"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"value"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>columnIndex</code> is not documented.","column":"16","line":"341"}},{type:"error",attributes:{"msg":"Parameter <code>rowIndex</code> is not documented.","column":"16","line":"341"}},{type:"error",attributes:{"msg":"Parameter <code>value</code> is not documented.","column":"16","line":"341"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"16","line":"341"}}]}]},{type:"method",attributes:{"hasError":"true","overriddenFrom":"qx.ui.table.model.Basic","name":"sortByColumn"},children:[{type:"params",children:[{type:"param",attributes:{"name":"columnIndex"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"ascending"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>columnIndex</code> is not documented.","column":"20","line":"205"}},{type:"error",attributes:{"msg":"Parameter <code>ascending</code> is not documented.","column":"20","line":"205"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"20","line":"205"}}]}]}]}]}