{type:"class",attributes:{"name":"Conditional","hasWarning":"true","packageName":"qx.ui.table.cellrenderer","superClass":"qx.ui.table.cellrenderer.Default","fullName":"qx.ui.table.cellrenderer.Conditional","type":"class"},children:[{type:"constructor",children:[{type:"method",attributes:{"isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"align"},children:[{type:"desc",attributes:{"text":"<p>The default alignment to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"color"},children:[{type:"desc",attributes:{"text":"<p>The default color to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"style"},children:[{type:"desc",attributes:{"text":"<p>The default style to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"weight"},children:[{type:"desc",attributes:{"text":"<p>The default weight to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","hasError":"true","name":"_apply_formatting"},children:[{type:"params",children:[{type:"param",attributes:{"name":"conditions"}},{type:"param",attributes:{"name":"cond_num"}},{type:"param",attributes:{"name":"style"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"25","line":"77"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","name":"_js_in_array"},children:[{type:"params",children:[{type:"param",attributes:{"name":"the_needle"}},{type:"param",attributes:{"name":"the_haystack"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"20","line":"96"}}]}]},{type:"method",attributes:{"name":"addBetweenCondition"},children:[{type:"params",children:[{type:"param",attributes:{"name":"condition"},children:[{type:"desc",attributes:{"text":"<p>The type of condition. Accepted strings are &#8220;between&#8221; and &#8221;!between&#8221;.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"value1"},children:[{type:"desc",attributes:{"text":"<p>The first value to compare against.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"value2"},children:[{type:"desc",attributes:{"text":"<p>The second value to compare against.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"align"},children:[{type:"desc",attributes:{"text":"<p>The alignment to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"color"},children:[{type:"desc",attributes:{"text":"<p>The color to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"style"},children:[{type:"desc",attributes:{"text":"<p>The style to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"weight"},children:[{type:"desc",attributes:{"text":"<p>The weight to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"target"},children:[{type:"desc",attributes:{"text":"<p>The text value of the column to compare against. If this is null,\n    comparisons will be against the contents of this cell.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>The addBetweenCondition method is used to add a between condition to the\ncell renderer.</p>\n\n<p>Note: Passing null is different from passing an empty string in the align,\ncolor, style and weight arguments. Null will allow pre-existing formatting\nto pass through, where an empty string will clear it back to the default\nformatting set in the constructor.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"addNumericCondition"},children:[{type:"params",children:[{type:"param",attributes:{"name":"condition"},children:[{type:"desc",attributes:{"text":"<p>The type of condition. Accepted strings are &#8221;==&#8221;, &#8221;!=&#8221;, &#8221;>&#8221;, &#8221;<\", \">=&#8221;,\n    and &#8221;<=&#8221;.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"value1"},children:[{type:"desc",attributes:{"text":"<p>The value to compare against.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"Integer"}}]}]},{type:"param",attributes:{"name":"align"},children:[{type:"desc",attributes:{"text":"<p>The alignment to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"color"},children:[{type:"desc",attributes:{"text":"<p>The color to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"style"},children:[{type:"desc",attributes:{"text":"<p>The style to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"weight"},children:[{type:"desc",attributes:{"text":"<p>The weight to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"target"},children:[{type:"desc",attributes:{"text":"<p>The text value of the column to compare against. If this is null,\n    comparisons will be against the contents of this cell.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>The addNumericCondition method is used to add a basic numeric condition to\nthe cell renderer.</p>\n\n<p>Note: Passing null is different from passing an empty string in the align,\ncolor, style and weight arguments. Null will allow pre-existing formatting\nto pass through, where an empty string will clear it back to the default\nformatting set in the constructor.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"name":"addRegex"},children:[{type:"params",children:[{type:"param",attributes:{"name":"regex"},children:[{type:"desc",attributes:{"text":"<p>The regular expression to match against.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"align"},children:[{type:"desc",attributes:{"text":"<p>The alignment to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"color"},children:[{type:"desc",attributes:{"text":"<p>The color to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"style"},children:[{type:"desc",attributes:{"text":"<p>The style to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"weight"},children:[{type:"desc",attributes:{"text":"<p>The weight to format the cell with if the condition matches.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]},{type:"param",attributes:{"name":"target"},children:[{type:"desc",attributes:{"text":"<p>The text value of the column to compare against. If this is null,\n    comparisons will be against the contents of this cell.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>The addRegex method is used to add a regular expression condition to the\ncell renderer.</p>\n\n<p>Note: Passing null is different from passing an empty string in the align,\ncolor, style and weight arguments. Null will allow pre-existing formatting\nto pass through, where an empty string will clear it back to the default\nformatting set in the constructor.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]}]},{type:"method",attributes:{"hasError":"true","overriddenFrom":"qx.ui.table.cellrenderer.Default","name":"updateDataCellElement"},children:[{type:"params",children:[{type:"param",attributes:{"name":"cellInfo"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]},{type:"param",attributes:{"name":"cellElement"},children:[{type:"types",children:[{type:"entry",attributes:{"type":"var"}}]}]}]},{type:"desc",attributes:{"text":"<p>Overridden; called whenever the cell updates. The cell will iterate through\neach available condition and apply formatting for those that\nmatch. Multiple conditions can match, but later conditions will override\nearlier ones. Conditions with null values will stack with other conditions\nthat apply to that value.</p>"}},{type:"return",children:[{type:"types",children:[{type:"entry",attributes:{"type":"void"}}]}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>cellInfo</code> is not documented.","column":"29","line":"238"}},{type:"error",attributes:{"msg":"Parameter <code>cellElement</code> is not documented.","column":"29","line":"238"}}]}]}]}]}